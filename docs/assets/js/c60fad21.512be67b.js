"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8642],{7222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(4848),i=n(8453);const o={sidebar_position:5},c="Architectural decision records",s={id:"adr/adr-index",title:"Architectural decision records",description:"We document our architectural and design decisions for all of our components.",source:"@site/docs/adr/adr-index.md",sourceDirName:"adr",slug:"/adr/adr-index",permalink:"/docs/adr/adr-index",draft:!1,unlisted:!1,editUrl:"https://github.com/IntersectMBO/plutus/edit/master/doc/docusaurus/docs/adr/adr-index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Architectural decision records",permalink:"/docs/category/architectural-decision-records"},next:{title:"ADR 1: Record architectural decisions",permalink:"/docs/adr/adr1"}},a={},d=[];function l(e){const t={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"architectural-decision-records",children:"Architectural decision records"}),"\n",(0,r.jsx)(t.p,{children:"We document our architectural and design decisions for all of our components.\nTo do that, there is a practice called architectural decision records (ADR), that we can integrate into our workflow.\nAn ADR is a document that captures an important architectural decision made along with its context and consequences."}),"\n",(0,r.jsx)(t.p,{children:"The goals are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Making decisions transparent to internal/external stakeholders and contributors"}),"\n",(0,r.jsx)(t.li,{children:"Getting feedback on decisions that we're about to make or have made"}),"\n",(0,r.jsx)(t.li,{children:"Providing external contributors with a framework to propose architectural changes"}),"\n",(0,r.jsx)(t.li,{children:"Providing a big picture of all major decisions that were made."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The general process for creating an ADR is:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Cloning the repository"}),"\n",(0,r.jsxs)(t.li,{children:["Creating a new file with the format:\n",(0,r.jsx)(t.code,{children:"[<ADR_NUMBER\\>-<TITLE>.md]"})," in the directory ",(0,r.jsx)(t.code,{children:"[doc/adr]"})]}),"\n",(0,r.jsx)(t.li,{children:"Adding the ADR in the table of contents tree of the documentation"}),"\n",(0,r.jsx)(t.li,{children:"Committing and pushing to the repository."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var r=n(6540);const i={},o=r.createContext(i);function c(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);